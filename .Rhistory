system("python code/iris_deeplearning.py")
install.packages("h2o")
p <- h2o.predict(m, test)
library(h2o)
h2o.init(nthreads = -1)
datasets <- "https://raw.githubusercontent.com/DarrenCook/h2o/bk/datasets/"
data <- h2o.importFile(paste0(datasets, "iris_wheader.csv"))
x <- "class"
y <- setdiff(names(data), y)
parts <- h2o.splitFrame(data, 0.8)
train <- parts[[0]]
test <- parts[[1]]
m <- h2o.deeplearning(x, y, train)
p <- h2o.predict(m, test)
source('~/Development/Code/practical-machine-learning/code/iris_deeplearning.R')
source('~/Development/Code/practical-machine-learning/code/iris_deeplearning.R')
View(m)
source('~/Development/Code/practical-machine-learning/code/visualize_mnist_data.R')
source('~/Development/Code/practical-machine-learning/code/visualize_mnist_data.R')
avgsd <- matrix(sapply(x, function(x) h2o.sd(train64k[,x])), nrow = 28)
avgsd <- matrix(sapply(x, function(x) h2o.sd(train60k[,x])), nrow = 28)
avgsd <- matrix(sapply(x, function(x) h2o.sd(train60k[,x])), nrow = 28)
avg <- matrix(h2o.mean(train60k[,x]), nrow = 28)
h2o.summary(train60k)
train60k
source('~/Development/Code/practical-machine-learning/code/visualize_mnist_data.R')
source('~/Development/Code/practical-machine-learning/code/visualize_mnist_data.R')
mean(h2o.mean(train60k[, x]) > 16)
h2o.group_by(train60k, by = y)
h2o.group_by(train60k, by = train60k[,y])
h2o.group_by(train60k, by = y)
h2o.group_by(train60k, by = "785")
h2o.group_by(train60k, by = y)
train60k[, y]
h2o.group_by(train60k, by = train60k[, y])
h2o.group_by(train60k, by = train60k[, y])
h2o.group_by(train60k, by = "C785")
train60k.group_by(y)
h2o.group_by(train60k, by = "C1")
train60k
library(tidyverse)
tib <- as_tibble(train60k)
tib %>% group_by(y)
tib %>% group_by("C785")
tib %>% group_by("C785") %>% count()
tib %>% count() %>% group_by("C785")
source('~/.active-rstudio-document')
source('~/Development/Code/practical-machine-learning/code/load.football.R')
data <- h2o.importFolder(paste(getwd(), "/datasets/england/2013-2014", sep = ""))
source('~/Development/Code/practical-machine-learning/code/load.football.R')
source('~/Development/Code/practical-machine-learning/code/analyze_football_bet_correlations.R')
View(d)
pairs(d, lower.panel = panel.smooth, upper.panel = panel.cor)
source('~/Development/Code/practical-machine-learning/code/analyze_football_bet_correlations.R')
h2o.cor(betsD, use="complete.obs")
source('~/Development/Code/practical-machine-learning/code/load.football.R')
source('~/Development/Code/practical-machine-learning/code/load.football.R')
source('~/Development/Code/practical-machine-learning/code/load.football.R')
source('~/Development/Code/practical-machine-learning/code/misbalanced_classes.example.R')
source('~/Development/Code/practical-machine-learning/code/misbalanced_classes.example.R')
h2o.confusionMatrix()
source('~/Development/Code/practical-machine-learning/code/misbalanced_classes.example.R')
h2o.confusionMatrix()
data <- h2o.importFile(paste0(datasets,"iris_wheader.csv"))
source('~/Development/Code/practical-machine-learning/code/misbalanced_classes.example.R')
data
data <- data[1:120,]
data
summary(data$class)
parts <- h2o.splitFrame(data, 0.8)
train <- parts[[1]]
test <- parts[[2]]
summary(train)
summary(test)
m1 <- h2o.randomForest(
1:4, 5, train, model_id = "RF_balanced",
balance_classes = TRUE
)
h2o.confusionMatrix()
library(h2o)
h2o.init(nthreads = -1)
datasets <- "https://raw.githubusercontent.com/DarrenCook/h2o/bk/datasets/"
data <- h2o.importFile(paste0(datasets, "iris_wheader.csv"))
data <- data[1:120,]
summary(data$class)
parts <- h2o.splitFrame(data, 0.8)
train <- parts[[1]]
test <- parts[[2]]
summary(train)
summary(test)
m1 <- h2o.randomForest(
1:4, 5, train, model_id = "RF_defaults"
)
h2o.confusionMatrix(m1)
m2 <- h2o.randomForest(
1:4, 5, train, model_id = "RF_balanced",
balance_classes = TRUE
)
h2o.confusionMatrix(m2)
m3 <- h2o.randomForest(
1:4, 5, train, model_id = "RF_class_sampling",
balance_classes = TRUE, class_sampling_factors = c(1, 1, 2.5)
)
h2o.confusionMatrix(m3)
